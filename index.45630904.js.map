{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,I,EAAM,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAe,SAAS,sBAAsB,CAAC,gB,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAC/C,EAAe,SAAS,aAAa,CAAC,qBACtC,EAAiB,SAAS,aAAa,CAAC,uBACxC,EAAW,EAAE,CACf,EAAkB,EAClB,EAAU,EAEd,EAAS,OAAO,CAAC,SAAC,CAAlB,EACE,IAAM,EAAS,EAAQ,WAAW,CAAC,IAAI,GAEvC,EAAS,IAAI,CAAC,OAAO,EAAO,OAAO,CAAC,KAAM,KAC5C,GAGA,EAAU,KAAK,KAAK,CAAC,AADrB,CAAA,EAAkB,EAAS,MAAM,CAAC,SAAC,CAAA,CAAO,CAA1C,EAAqD,OAAA,EAAQ,CAAQ,EAAA,EAAA,EAC9B,EAAS,MAAM,EAEtD,EAAa,WAAW,CAAG,EAAgB,cAAc,GACzD,EAAe,WAAW,CAAG,EAAQ,cAAc","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["'use strict';\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar elements = _to_consumable_array(document.getElementsByClassName('population'));\nvar totalElement = document.querySelector('.total-population');\nvar averageElement = document.querySelector('.average-population');\nvar newArray = [];\nvar totalPopulation = 0;\nvar average = 0;\nelements.forEach(function(element) {\n    var number = element.textContent.trim();\n    newArray.push(Number(number.replace(/,/g, '')));\n});\ntotalPopulation = newArray.reduce(function(total, number) {\n    return total + number;\n}, 0);\naverage = Math.round(totalPopulation / newArray.length);\ntotalElement.textContent = totalPopulation.toLocaleString();\naverageElement.textContent = average.toLocaleString();\n\n//# sourceMappingURL=index.45630904.js.map\n","'use strict';\n\nconst elements = [...document.getElementsByClassName('population')];\nconst totalElement = document.querySelector('.total-population');\nconst averageElement = document.querySelector('.average-population');\nconst newArray = [];\nlet totalPopulation = 0;\nlet average = 0;\n\nelements.forEach((element) => {\n  const number = element.textContent.trim();\n\n  newArray.push(Number(number.replace(/,/g, '')));\n});\n\ntotalPopulation = newArray.reduce((total, number) => total + number, 0);\naverage = Math.round(totalPopulation / newArray.length);\n\ntotalElement.textContent = totalPopulation.toLocaleString();\naverageElement.textContent = average.toLocaleString();\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","elements","_array_without_holes","isArray","document","getElementsByClassName","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","totalElement","querySelector","averageElement","newArray","totalPopulation","average","forEach","element","number","textContent","trim","push","Number","replace","Math","round","reduce","total","toLocaleString"],"version":3,"file":"index.45630904.js.map"}